- name: display pre database software install message
  remote_user: "{{ root_user }}"
  debug:
    msg:
      - 'Oracle Database Software 19c Installation started for Single Instance at {{ansible_date_time.iso8601}}:'

- name: Disable SELinux
  when: inventory_hostname in groups['dbservers']
  remote_user: "{{ root_user }}"
  selinux: state=disabled

- name: Disable Firewall Deamon (firewalld)
  when: inventory_hostname in groups['dbservers']
  remote_user: "{{ root_user }}"
  service: name=firewalld state=stopped enabled=no

- name: Add oracle user limits
  when: inventory_hostname in groups['dbservers']
  remote_user: "{{ root_user }}"
  lineinfile: dest=/etc/security/limits.conf line='{{ oracle_user }} {{ item.limit }} {{ item.type}} {{ item.value }}'
  with_items:
    - { limit: 'soft', type: nofile, value: '{{ soft_no_file }}' }
    - { limit: 'hard', type: nofile, value: '{{ hard_no_file }}' }
    - { limit: 'soft', type: nproc, value: '{{ soft_nproc }}' }
    - { limit: 'hard', type: nproc, value: '{{ hard_nproc }}' }
    - { limit: 'soft', type: stack, value: '{{ soft_stack }}' }
    - { limit: 'hard', type: stack, value: '{{ hard_stack }}' }
    - { limit: 'soft', type: memlock, value: '{{ soft_memlock }}' }
    - { limit: 'hard', type: memlock, value: '{{ hard_memlock }}' }

- name: Disable transparent hugepages
  when: inventory_hostname in groups['dbservers']
  remote_user: "{{ root_user }}"
  lineinfile: dest=/etc/default/grub line='transparent_hugepage=never'

- name: Add oracel group
  when: inventory_hostname in groups['dbservers']
  remote_user: "{{ root_user }}"
  ansible.builtin.group:
    name: "{{ item.groups }}"
    state: present
    gid: "{{ item.uid }}"
  with_items: "{{ user_details }}"

- name : User to  Group oracle
  when: inventory_hostname in groups['dbservers']
  remote_user: "{{ root_user }}"
  user:
    name: "{{ item.name }}"
    uid: "{{ item.uid }}"
    groups: "{{ item.groups }}"
    state: present
    append: yes
  with_items: "{{ user_details }}"

# ==> Disable transparent hugepages
- name: Copy script
  when: inventory_hostname in groups['dbservers']
  remote_user: "{{ root_user }}"
  copy: src=disable_trans_hugepages.sh dest='~/disable_trans_hugepages.sh' mode=755

- name: Disable Transparent Huge Pages
  when: inventory_hostname in groups['dbservers']
  remote_user: "{{ root_user }}"
  shell: '~/disable_trans_hugepages.sh'

- name: copy listener response file
  when: inventory_hostname in groups['dbservers']
  remote_user: "{{ root_user }}"
  template: src=roles/oracle19c_rdbmsinstall/templates/netca.rsp.j2 dest={{ stage_dir }}/netca.rsp mode=0755 owner="{{ oracle_user }}" group="{{ oracle_install_group }}"
  tags:
   - db19c_copy_listener


#- name: Create listener using netca
#  when: inventory_hostname in groups['dbservers']
#  remote_user: "{{ root_user }}"
#  become: yes
#  become_user: "{{ oracle_user }}"
#  command: '{{ oracle_home }}/bin/netca -silent -responseFile {{ stage_dir }}/netca.rsp'

#- name: copy response file for dbca
#  when: inventory_hostname in groups['dbservers']
#  remote_user: "{{ root_user }}"
#  template: src=dbca.rsp.j2 dest={{ installation_folder }}/dbca.rsp mode=0755 owner="{{ oracle_user }}" group="{{ oracle_install_group }}"

#- name: create database
#  when: inventory_hostname in groups['dbservers']
#  remote_user: "{{ root_user }}"
#  command: '{{ oracle_home }}/bin/dbca -silent -responseFile {{ installation_folder }}/dbca.rsp'


- name: copy start/stop services file
  when: inventory_hostname in groups['dbservers']
  remote_user: "{{ root_user }}"
  become: yes
  copy: src=roles/oracle19c_rdbmsinstall/files/{{ item }} dest={{ stage_dir }} mode=0755 owner="{{ oracle_user }}" group="{{ oracle_install_group }}"
  with_items:
     - start_all.sh
     - stop_all.sh
     - setEnv.sh
  tags:
   - db19c_copy_oracelservices

- name: add enviroment to oracle .bash_profile
  when: inventory_hostname in groups['dbservers']
  remote_user: "{{ root_user }}"
  become: yes
  become_user: "{{ oracle_user }}"
  lineinfile: dest=/home/oracle/.bash_profile line='. {{ stage_dir }}/setEnv.sh'




- name: display post install message
  debug:
    msg:
      - 'This Steps completed below task for Single Instance at {{ansible_date_time.iso8601}}:'
      - '- Install Single Instance Oracle Database Software'
      - 'Next Steps left to do:'
      - '- Create SI empty Container Database on server ora-x1'
      - '- Create SI Pluggable Database on server ora-x1'
      - '- Deinstall Single Instance Oracle Database Software'
      - '- END OF ALL: git clone of OracleDBAwithAnsible repository will be shared'
